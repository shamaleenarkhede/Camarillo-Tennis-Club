@model Camarillo_Tennis_Club.Models.Matches

@{
    ViewBag.Title = "Edit";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Matches</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatchDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MatchDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date"})
                @*@Html.EditorFor(model => model.MatchDate, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.MatchDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player1ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Player1ID, new SelectList(Model.playerNames, "PlayerID", "FullName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player1ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player2ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Player2ID, new SelectList(Model.playerNames, "PlayerID", "FullName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player2ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinnerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WinnerID, new SelectList(Model.playerNames, "PlayerID", "FullName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WinnerID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Scores", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table border="1" cellpadding="1" class="table table-border">
                    <tr>
                        <th>
                            Player
                        </th>
                        <th>
                            Set-1 Score
                        </th>
                        <th>
                            Set-2 Score
                        </th>
                        <th>
                            Set-3 Score
                        </th>
                    </tr>
                  
                    <tr>
                        <td>Player-1</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[0].Set1Score, new SelectList(Model.set1ScoreList, "ID", "Set1Score"))</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[0].Set2Score, new SelectList(Model.set2ScoreList, "ID", "Set2Score"))</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[0].Set3Score, new SelectList(Model.set3ScoreList, "ID", "Set3Score"))</td>
                    </tr>

                    <tr>
                        <td>Player-2</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[1].Set1Score, new SelectList(Model.set1ScoreList, "ID", "Set1Score"))</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[1].Set2Score, new SelectList(Model.set2ScoreList, "ID", "Set2Score"))</td>
                        <td>@Html.DropDownListFor(model => model.scoreList[1].Set3Score, new SelectList(Model.set3ScoreList, "ID", "Set3Score"))</td>
                    </tr>
                  

                </table>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


